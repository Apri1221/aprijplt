{"version":3,"sources":["components/NavigationMenu.js","components/Navigation.js","components/Header.js","components/Footer.js","views/About.js","components/Loader.js","components/ProductCard.js","views/Home.js","views/Product.js","App.js","serviceWorker.js","index.js"],"names":["NavigationMenu","props","className","to","onClick","closeMenu","Navigation","useState","showMenu","setShowMenu","menu","useTransition","from","transform","enter","leave","maskMenu","position","opacity","icon","faBars","map","item","key","div","style","kkey","Header","Footer","About","Loader","ProductCard","product","id","images","imageUrl","name","price","Home","url","loading","data","error","products","setProducts","content","useEffect","axios","get","then","response","catch","index","Product","useParams","setProduct","src","alt","description","console","log","App","basename","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a813bf11.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction NavigationMenu(props) {\r\n    // fire hook or a setter, using props\r\n    return (\r\n        <div>\r\n            <div className=\"font-bold py-3\">The Menu</div>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/\" className=\"text-blue-500 py-3 border-t border-b block\"\r\n                        onClick={props.closeMenu}>Home</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/about\" className=\"text-blue-500 py-3 border-b block\"\r\n                        onClick={props.closeMenu}>About</Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavigationMenu","import React, { useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\r\nimport { useTransition, animated } from 'react-spring'\r\nimport NavigationMenu from './NavigationMenu'\r\n\r\n\r\nfunction Navigation() {\r\n    const [showMenu, setShowMenu] = useState(false)\r\n\r\n    const menu = useTransition(showMenu, null, {\r\n        from: { transform: 'translateX(-100%)' },\r\n        enter: { transform: 'translateX(0)' },\r\n        leave: { transform: 'translateX(-100%)' },\r\n    })\r\n\r\n    const maskMenu = useTransition(showMenu, null, {\r\n        from: { position: 'absolute', opacity: 0 },\r\n        enter: { opacity: 1 },\r\n        leave: { opacity: 0 },\r\n    })\r\n\r\n    return (\r\n        <nav>\r\n            <span className=\"text-xl\">\r\n                <FontAwesomeIcon\r\n                    icon={faBars}\r\n                    onClick={() => setShowMenu(!showMenu)}\r\n                />\r\n            </span>\r\n            {\r\n                maskMenu.map(({ item, props, key }) =>\r\n                    item &&\r\n                    <animated.div\r\n                        key={key}\r\n                        style={props}\r\n                        className=\"bg-black-t-50 fixed top-0 left-0 w-full h-full z-50\"\r\n                        onClick={() => setShowMenu(false)}>\r\n                    </animated.div>)\r\n            }\r\n\r\n            {\r\n                menu.map(({ item, props, key }) =>\r\n                    item &&\r\n                    <animated.div\r\n                        kkey={key}\r\n                        style={props}\r\n                        className=\"fixed bg-white top-0 left-0 w-2/3 md:w-1/4 h-full z-50 shadow p-5\">\r\n                        <NavigationMenu closeMenu={() => setShowMenu(false)}/>\r\n                    </animated.div>)\r\n            }\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\nimport Navigation from './Navigation'\r\n\r\n\r\nfunction Header () {\r\n    return (\r\n        <header className=\"border-b font-bold p-3 flex justify-between items-center\">\r\n            <span className=\"font-bold\">\r\n                AppApri\r\n            </span>\r\n            <Navigation />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nfunction Footer () {\r\n    return (\r\n        <footer className=\"bg-gray-200 text-center text-xs p-3 absolute bottom-0 w-full\">\r\n            &copy; Copyright 2020\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react'\r\n\r\n\r\nfunction About() {\r\n    return(\r\n        <div>\r\n            <h1 className=\"font-bold text-2xl mb-3\">This is the about page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default About","import React from 'react'\r\n\r\nfunction Loader() {\r\n    return (\r\n        <div className=\"flex justify-center\">\r\n            <div className=\"loader\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","// standard boilerplate code react creating component\r\n\r\n// import React from 'react';\r\n\r\n// function ProductCard () {\r\n//     return (\r\n//         <div></div>\r\n//     )\r\n// }\r\n\r\n// export default ProductCard\r\n\r\n\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ProductCard (props) {\r\n    return (\r\n        <div className=\"border mb-4 p-4 rounded overflow-hidden\">\r\n            <Link to={`/products/${props.product.id}`}>\r\n                <div style={{\r\n                    'backgroundImage': `url('${props.product.images[0].imageUrl}')`\r\n                }} className=\"w-full h-64 bg-blue bg-cover\">\r\n\r\n                </div>\r\n            </Link>\r\n            <div className=\"p-3\"></div>\r\n            <h1 className=\"text-xl font-bold mb-3\">\r\n                <Link to={`/products/${props.product.id}`}>\r\n                    {props.product.name}\r\n                </Link>\r\n            </h1>\r\n            <div className=\"mb-3\">\r\n                {props.product.price}\r\n            </div>\r\n            <Link to={`/products/${props.product.id}`} \r\n                className=\"bg-blue-500 text-white p-2 flex justify-center\">\r\n                View\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductCard","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport Loader from '../components/Loader'\r\nimport ProductCard from '../components/ProductCard';\r\n\r\nfunction Home() {\r\n    const url = 'https://5f674a3e38ce8700163984ae.mockapi.io/products';\r\n\r\n    const [products, setProducts] = useState({\r\n       loading: true,\r\n       data: null,\r\n       error: false, \r\n    });\r\n    \r\n    let content = null;\r\n\r\n    useEffect(() => {\r\n        axios.get(url).then(response => {\r\n            setProducts({\r\n                loading: false,\r\n                data: response.data,\r\n                error: false,\r\n            })\r\n        }).catch(() => {\r\n            setProducts({\r\n                loading: false,\r\n                data: null,\r\n                error: true,\r\n            })\r\n        });\r\n    }, [url]);\r\n\r\n\r\n    if(products.loading) {\r\n        content = <Loader></Loader>\r\n    }\r\n\r\n    if(products.error) {\r\n        content = <div>\r\n            <h1 className=\"text-2xl font-bold mb-3\">\r\n                There was an error, refresh or try again.\r\n            </h1>\r\n        </div> \r\n    }\r\n\r\n    if(products.data != null) {\r\n        content = products.data.map((item, index) => {\r\n            return (\r\n                <div key={index}>\r\n                    <h1 className=\"text-2xl font-bold mb-3\">\r\n                        <ProductCard product={item} />\r\n                    </h1>\r\n                </div>\r\n            );\r\n        })\r\n    } \r\n\r\n    return(\r\n        <div>\r\n            <h1 className=\"font-bold text-2xl mb-3\">For learning purpose, under development</h1>\r\n            <br></br>\r\n            {content}            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Home","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {useParams} from 'react-router-dom';\r\nimport Loader from '../components/Loader'\r\n\r\nfunction Product() {\r\n    const {id} = useParams();\r\n    const url = 'https://5f674a3e38ce8700163984ae.mockapi.io/products/' + id;\r\n    let initialState, content = null;\r\n    // const [product, setProduct] = useState(initialState);\r\n\r\n    const [product, setProduct] = useState({\r\n        loading: true,\r\n        data: null,\r\n        error: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        axios.get(url).then(\r\n            response => setProduct({\r\n                loading: false,\r\n                data: response.data,\r\n                error: false,\r\n            })\r\n        ).catch(() => {\r\n            setProduct({\r\n                loading: false,\r\n                data: null,\r\n                error: true,\r\n            })\r\n        });\r\n    }, [url])\r\n\r\n    if(product.loading) {\r\n        content = <Loader></Loader>\r\n    }\r\n\r\n    if(product.error) {\r\n        content = <div>\r\n            <h1 className=\"text-2xl font-bold mb-3\">\r\n                There was an error, refresh or try again.\r\n            </h1>\r\n        </div> \r\n    }\r\n    \r\n    if(product.data) {\r\n        content = \r\n        <div>\r\n            <h1 className=\"text-2xl font-bold mb-3\">\r\n                {product.data.name}\r\n            </h1>\r\n            <div>\r\n                <img\r\n                    src={product.data.images[0].imageUrl}\r\n                    alt={product.data.name}\r\n                />\r\n            </div>\r\n            <div className=\"font-bold text-xl mb-3\">\r\n                ${product.data.price}\r\n            </div>\r\n            <div>\r\n                {product.data.description}\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    console.log(product)\r\n    return(\r\n        <div>\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product;","import React from 'react';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route\r\n} from 'react-router-dom';\r\nimport About from './views/About';\r\nimport Home from './views/Home';\r\nimport Product from './views/Product';\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"relative pb-10 min-h-screen\">\r\n            {/* https://github.com/ReactTraining/react-router/blob/master/packages/react-router-dom/docs/api/BrowserRouter.md */}\r\n            <Router basename=\"/aprijplt\">\r\n                <Header />\r\n\r\n                <div className=\"p-3\">\r\n\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <Home />\r\n                        </Route>\r\n                        <Route path=\"/about\">\r\n                            <About />\r\n                        </Route>\r\n                        {/* :id adalah wildcard */}\r\n                        <Route path=\"/products/:id\">\r\n                            <Product />\r\n                        </Route>\r\n                    </Switch>\r\n\r\n                </div>\r\n\r\n                <Footer />\r\n\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './tailwind.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}